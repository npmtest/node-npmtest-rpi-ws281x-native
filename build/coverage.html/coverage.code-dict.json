{"/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/test.js":"/* istanbul instrument in package npmtest_rpi_ws281x_native */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/lib.npmtest_rpi_ws281x_native.js":"/* istanbul instrument in package npmtest_rpi_ws281x_native */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_rpi_ws281x_native = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_rpi_ws281x_native = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-rpi-ws281x-native && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_rpi_ws281x_native */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_rpi_ws281x_native\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_rpi_ws281x_native.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_rpi_ws281x_native.rollup.js'] =\n            local.assetsDict['/assets.npmtest_rpi_ws281x_native.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_rpi_ws281x_native.__dirname + '/lib.npmtest_rpi_ws281x_native.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/node_modules/rpi-ws281x-native/index.js":"module.exports = require('./lib/ws281x-native');\n\nmodule.exports.indexMapping = require('./lib/index-mapping');","/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/node_modules/rpi-ws281x-native/lib/ws281x-native.js":"var EventEmitter = require('events').EventEmitter;\n\n\n\nfunction getNativeBindings() {\n    var stub = {\n        init: function() {},\n        render: function() {},\n        setBrightness: function() {},\n        reset: function() {}\n    };\n\n    if (!process.getuid || process.getuid() !== 0) {\n        console.warn('[rpi-ws281x-native] This module requires being run ' +\n                'with root-privileges. A non-functional stub of the ' +\n                'interface will be returned.');\n\n        return stub;\n    }\n\n    // the native module might even be harmful (or won't work in the best case)\n    // in the wrong environment, so we make sure that at least everything we can\n    // test for matches the raspberry-pi before loading the native-module\n    if (process.arch !== 'arm' && process.platform !== 'linux') {\n        console.warn('[rpi-ws281x-native] It looks like you are not ' +\n                'running on a raspberry pi. This module will not work ' +\n                'on other platforms. A non-functional stub of the ' +\n                'interface will be returned.');\n\n        return stub;\n    }\n\n    // determine rapsberry-pi version based on SoC-family. (note: a more\n    // detailed way would be to look at the revision-field from cpuinfo, see\n    // http://elinux.org/RPi_HardwareHistory)\n    var raspberryVersion = (function() {\n        var cpuInfo = require('fs').readFileSync('/proc/cpuinfo').toString(),\n            socFamily = cpuInfo.match(/hardware\\s*:\\s*(bcm270[89])/i);\n\n        if(!socFamily) { return 0; }\n\n        switch(socFamily[1].toLowerCase()) {\n            case 'bcm2708': return 1;\n            case 'bcm2709': return 2;\n            default: return 0;\n        }\n    } ());\n\n    if (raspberryVersion === 0) {\n        console.warn('[rpi-ws281x-native] Could not verify raspberry-pi ' +\n                'version. If this is wrong and you are running this on a ' +\n                'raspberry-pi, please file a bug-report at ' +\n                '  https://github.com/beyondscreen/node-rpi-ws281x-native/issues\\n' +\n                'A non-functional stub of this modules interface will be ' +\n                'returned.');\n\n        return stub;\n    }\n\n    return require('./binding/rpi_ws281x.node');\n}\n\nvar bindings = getNativeBindings();\n\n/**\n * gamma-correction: remap color-values (provided as 0x00rrbbgg) with a\n * gamma-factor. Gamma-value and formula are taken from\n * http://rgb-123.com/ws2812-color-output/\n *\n * @type function(number): number\n */\nvar gammaCorrect = (function() {\n    var _gamma = 1/0.45;\n    var _gammaTable = new Uint8Array(256);\n\n    for(var i=0; i<256; i++) {\n        _gammaTable[i] = Math.floor(Math.pow(i / 255, _gamma) * 255 + 0.5);\n    }\n\n    return function gammaCorrect(color) {\n        return (\n            _gammaTable[color & 0xff]\n            | (_gammaTable[(color >> 8) & 0xff] << 8)\n            | (_gammaTable[(color >> 16) & 0xff] << 16)\n        );\n    };\n} ());\n\n\n/**\n * remap pixel-positions according to the specified index-mapping.\n *\n * @type function(Uint32Array, Array.<Number>): Uint32Array\n */\nvar remap = (function() {\n    var _tmpData = null;\n\n    return function remap(data, indexMapping) {\n        if(!_tmpData) {\n            _tmpData = new Uint32Array(data.length);\n        }\n\n        _tmpData.set(data);\n\n        for(var i=0; i<data.length; i++) {\n            data[i] = _tmpData[indexMapping[i]];\n        }\n\n        return data;\n    };\n} ());\n\n\n\nvar ws281x = new EventEmitter();\nvar _isInitialized = false;\nvar _indexMapping = null;\nvar _outputBuffer = null;\n\n\n// ---- EXPORTED INTERFACE\n\n/**\n * configures PWM and DMA for sending data to the LEDs\n *\n * @param {Number} numLeds  number of LEDs to be controlled\n * @param {?Object} options  (acutally only tested with default-values)\n *                           intialization-options for the library\n *                           (PWM frequency, DMA channel, GPIO, Brightness)\n */\nws281x.init = function(numLeds, options) {\n    _isInitialized = true;\n    _outputBuffer = new Buffer(4 * numLeds);\n\n    bindings.init(numLeds, options);\n};\n\n\n/**\n * register a mapping to manipulate array-indices within the\n * data-array before rendering.\n *\n * @param {Array.<Number>} mapping  the mapping, indexed by destination.\n */\nws281x.setIndexMapping = function(mapping) {\n    _indexMapping = mapping;\n};\n\n\n/**\n * send data to the LED-strip.\n *\n * @param {Uint32Array} data  the pixel-data, 24bit per pixel in\n *                            RGB-format (0xff0000 is red).\n * @return {Uint32Array} data as it was sent to the LED-strip\n */\nws281x.render = function(data) {\n    if(!_isInitialized) {\n        throw new Error('render called before initialization.');\n    }\n\n    this.emit('beforeRender', data);\n\n    if(_indexMapping) {\n        data = remap(data, _indexMapping);\n    }\n\n    for(var i=0; i<data.length; i++) {\n        _outputBuffer.writeUInt32LE(gammaCorrect(data[i]), 4 * i);\n    }\n    bindings.render(_outputBuffer);\n\n    this.emit('render', data);\n\n    return data;\n};\n\nws281x.setBrightness = function(brightness) {\n    if(!_isInitialized) {\n        throw new Error('setBrightness called before initialization.');\n    }\n\n    bindings.setBrightness(brightness);\n    // re-render to have the brightness applied\n    bindings.render(_outputBuffer);\n};\n\n/**\n * clears all LEDs, resets the PWM and DMA-parts and deallocates\n * all internal structures.\n */\nws281x.reset = function() {\n    _isInitialized = false;\n    _outputBuffer = null;\n\n    bindings.reset();\n};\n\nmodule.exports = ws281x;\n","/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/node_modules/rpi-ws281x-native/lib/index-mapping/index.js":"module.exports = {\n    mirrorMatrixX: require('./mirror-matrix-x')\n};","/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/node_modules/rpi-ws281x-native/lib/index-mapping/mirror-matrix-x.js":"module.exports = function(rows, cols) {\n    var map = new Uint16Array(rows*cols);\n\n    for(var x=0; x<cols; x++) {\n        for(var y=0; y<rows; y++) {\n            map[cols*y + x] = cols*y + rows-x-1;\n        }\n    }\n\n    return map;\n};","/home/travis/build/npmtest/node-npmtest-rpi-ws281x-native/node_modules/rpi-ws281x-native/lib/index-mapping/alternating-matrix.js":"module.exports = function(width, height) {\n    var map = new Uint16Array(width*height);\n    for(var i = 0; i<map.length; i++) {\n        var row = Math.floor(i/width), col = i % width;\n\n        if((row % 2) === 0) {\n            map[i] = i;\n        } else {\n            map[i] = (row+1) * width - (col+1);\n        }\n    }\n\n    return map;\n};"}